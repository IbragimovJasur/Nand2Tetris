// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    // Info: can store 8 - 16-bit values == 16 bytes

    PARTS:
    // Write
    DMux8Way(in=load, sel=address, 
            a=loadR0, b=loadR1, c=loadR2, d=loadR3, e=loadR4, f=loadR5, g=loadR6, h=loadR7);

    Register(in=in, load=loadR0, out=r0);
    Register(in=in, load=loadR1, out=r1);
    Register(in=in, load=loadR2, out=r2);
    Register(in=in, load=loadR3, out=r3);
    Register(in=in, load=loadR4, out=r4);
    Register(in=in, load=loadR5, out=r5);
    Register(in=in, load=loadR6, out=r6);
    Register(in=in, load=loadR7, out=r7);

    // Read
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address, out=out);
}
